services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  spark:
    image: bitnami/spark:latest
    user: root
    environment:
      - SPARK_MODE=master
    volumes:
      - ./delta-data:/delta
    command: sleep infinity

  producer:
    build:
      context: ./producer
    env_file:
      - .env
    environment:
      - GITHUB_TOKEN  # will be picked from .env
      - KAFKA_TOPIC
    depends_on:
      - kafka
    volumes:
      - ./producer:/app
    command: python -u producer.py
#    command: sleep infinity

  consumer:
    build:
      context: ./consumer
    depends_on:
      - kafka
      - spark
    volumes:
      - ./consumer:/app
      - ./delta-data:/delta
    command: python3 consumer.py

  cleaner:
    build:
      context: ./cleaner
    volumes:
      - ./delta-data:/delta
    depends_on:
      - kafka
      - consumer
    restart: always

  api:
    build:
      context: ./api
    volumes:
      - ./delta-data:/delta  # Mount shared Delta lake folder
    ports:
      - "8000:8000"
    depends_on:
      - cleaner

volumes:
  delta-data:
